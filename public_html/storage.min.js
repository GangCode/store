
var store=function(){this.storage="session";var i=null;var a=function(j){switch(j){case"local":this.storage="local";break;case"session":this.storage="session";break;default:throw new Error('not suport this type.The param must be in "local" or "session"');break}};var h=function(j,k){d(j);switch(this.storage){case"local":localStorage.setItem(j,c(k));break;default:sessionStorage.setItem(j,c(k));break}};var b=function(j){d(j);switch(this.storage){case"local":return g(localStorage.getItem(j));default:return g(sessionStorage.getItem(j))}};var e=function(j){if(b(j)===i){return{result:false,message:j+" not exist"}}switch(this.storage){case"local":localStorage.removeItem(j);break;default:sessionStorage.removeItem(j);break}return{result:true,message:"remove"+j+"success"}};var f=function(){switch(this.storage){case"local":localStorage.clear();break;default:sessionStorage.clear();break}};var d=function(j){if(typeof j!=="string"){throw new TypeError("key's type error.key is string value.")}};var c=function(k){var j=null;switch(typeof k){case"string":case"boolean":case"array":j=JSON.stringify(k);break;case"number":if(isNaN(k)){throw new TypeError("not support NaN.")}j=JSON.stringify(k);break;case"object":if(k===i){throw new TypeError("not support null.")}j=JSON.stringify(k);break}return j};var g=function(j){return JSON.parse(j)};return{switchType:a,set:h,get:b,remove:e,clear:f}}();